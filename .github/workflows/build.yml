name: Build Axyl's Artix-based ISO

on:
  schedule:
    - cron: "0 16 * * *"
  workflow_dispatch:
   inputs:
     dev:
        description: "Run as development?"
        type: boolean
        required: true
        default: false
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    container:
      image: angelofallaria/artix-base
      options: --privileged

    steps:
      - name: checks
        run: |
          cd /lib/
          ls
      - name: Update packages
        run: |
          pacman -Syu --noconfirm --needed git squashfs-tools artools iso-profiles artix-keyring artix-mirrorlist archlinux-keyring archlinux-mirrorlist kmod
          pacman-key --init
          pacman-key --populate
        
      - name: Cache pacman packages
        uses: actions/cache@v3
        with:
          path: /var/cache/pacman/pkg/
          key: artix-packages

      - uses: actions/checkout@v3

      - name: Set current date as environment variable
        run: echo "DATE=`date +'%Y.%m.%d'`" >>$GITHUB_ENV

      - name: Setup symlinks for the build config
        run: |
          mkdir ~/.config
          ln -sf "$(pwd)/artixiso/artools-workspace" ~/
          ln -sf "$(pwd)/config/artools" ~/.config/

      - name: Build ISO
        working-directory: ./artixiso/artools-workspace/iso-profiles/
        run: ./build.sh

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dev == 'true' }}
        with:
          name: axyl-artix-iso ${{ env.DATE }}
          path: /root/artools-workspace/iso/*
          
      - name: Create tag and release
        uses: ncipollo/release-action@v1
        if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dev == 'false') }}
        with:
          name: axyl-artix-iso ${{ env.DATE }}
          tag: ${{ env.DATE }}
          commit: main
          bodyFile: RELEASE.md
          artifacts: "/root/artools-workspace/iso/*"
          token: ${{ secrets.GITHUB_TOKEN }}
